
server {
 listen 8080 default_server;
 server_name _;
 location / {
   root html;
 } 
}


server {
 listen 8080;
 server_name k8s.kiwol.com;

 location / {
   proxy_pass   http://127.0.0.1:3001;
   proxy_set_header Host $host;
   proxy_set_header X-Forwarded-Proto $scheme;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Access-Control-Allow-Credentials 'true';                                                                                                                        
   proxy_set_header 'Access-Control-Allow-Origin' "$http_origin"; 

 }

 location /graphql {
   proxy_pass   http://127.0.0.1:3001;
   proxy_set_header HOST $host;
   proxy_set_header X-Forwarded-Proto $scheme;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Access-Control-Allow-Credentials 'true';                                                                                                                        
   proxy_set_header 'Access-Control-Allow-Origin' "$http_origin"; 
 } 

}


server {
 listen 8080;
 server_name front.kiwol.com;
 location / {
   proxy_pass   http://127.0.0.1:3001;
   proxy_set_header Host $host;
   proxy_set_header X-Forwarded-Proto $scheme;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header Access-Control-Allow-Credentials 'true';                                                                                                                        
   proxy_set_header 'Access-Control-Allow-Origin' "$http_origin"; 
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 } 
}

server {
 listen 8080;
 server_name back.kiwol.com;
 location / {
   proxy_pass   http://127.0.0.1:3002;
   proxy_set_header Host $host;
   proxy_set_header X-Forwarded-Proto $scheme;
   proxy_set_header X-Real-IP $remote_addr;
   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
   proxy_set_header Access-Control-Allow-Credentials 'true';                                                                                                                        
   proxy_set_header 'Access-Control-Allow-Origin' "$http_origin"; 
 } 
}

server {
 listen 8080;
 server_name drupal.kiwol.com;
 root /var/www/drupal/web;

   access_log /var/log/nginx/drupal.access.log;
   error_log /var/log/nginx/drupal.error.log;

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Very rarely should these ever be accessed outside of your lan
    location ~* \.(txt|log)$ {
        allow 192.168.0.0/16;
        deny all;
    }

    location ~ \..*/.*\.php$ {
        return 403;
    }

    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # Block access to "hidden" files and directories whose names begin with a
    # period. This includes directories used by version control systems such
    # as Subversion or Git to store control files.
    location ~ (^|/)\. {
        return 403;
    }

    location / {
        # try_files $uri @rewrite; # For Drupal <= 6
        try_files $uri /index.php?$query_string; # For Drupal >= 7
    }
    

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    # Don't allow direct access to PHP files in the vendor directory.
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

 location ~ \.php$ {
    
       add_header 'Access-Control-Allow-Origin' "$http_origin" always;
       add_header Access-Control-Allow-Credentials 'true' always;
       add_header 'Access-Control-Allow-Headers' 'x-csrf-token,Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always; 
        fastcgi_split_path_info ^(.+?\.php)(|/.*)$;
        # Ensure the php file exists. Mitigates CVE-2019-11043
        try_files $fastcgi_script_name =404;
        # Security note: If you're running a version of PHP older than the
        # latest 5.3, you should have "cgi.fix_pathinfo = 0;" in php.ini.
        # See http://serverfault.com/q/627903/94922 for details.
        include fastcgi_params;
        # Block httpoxy attacks. See https://httpoxy.org/.
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;

     fastcgi_pass   127.0.0.1:9000;
     fastcgi_index  index.php;
     include        fastcgi_params;
 }

# Fighting with Styles? This little gem is amazing.
    # location ~ ^/sites/.*/files/imagecache/ { # For Drupal <= 6
    location ~ ^/sites/.*/files/styles/ { # For Drupal >= 7
        try_files $uri @rewrite;
    }

    # Handle private files through Drupal. Private file's path can come
    # with a language prefix.
    location ~ ^(/[a-z\-]+)?/system/files/ { # For Drupal >= 7
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }
    # Enforce clean URLs
    # Removes index.php from urls like www.example.com/index.php/my-page --> www.example.com/my-page
    # Could be done with 301 for permanent or other redirect codes.
    if ($request_uri ~* "^(.*/)index\.php(.*)") {
        return 307 $1$2;
    }
}
